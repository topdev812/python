Вывод сообщения:                                                                       print('Hello, World!')
Комментарий:                                                                           # You know nothing, Jon Snow!
Инструкция (statement) — команда для компьютера, написанная на языке программирования: print('Mother of Dragons.') 
Код на python — это набор инструкций, разделенных (чаще всего) переводом строки:       print('Robert')
                                                                                       print('Stannis')
                                                                                       print('Renly')
Арифметические операции:                                                               
- — вычитание
* — умножение
** — возведение в степень
/ — деление
// — целочисленное деление
% — остаток от деления

Вывод строки (с кавычками и апострофами):                                              print("Dracarys!")
                                                                                       print('Dracarys!')
                                                                                       print("Dragon's mother")
                                                                                       print("Dragon's mother said \"No\"")
                                                                                       print("\"Khal Drogo's favorite word is \"athjahakar\"\"")
                                                                                       print('"Khal Drogo\'s favorite word is \"athjahakar""')
Символ экранирования: \. Если поставить \ перед кавычкой (одинарной или двойной), это скажет интерпретатору о том, что кавычку нужно рассматривать не как начало или конец строки,
а как часть строки. \n - это пример экранированной последовательности (escape sequence). Их еще называют управляющими конструкциями.к таким символам относятся табуляция \t 
(разрыв, получаемый при нажатии на кнопку Tab) и возврат каретки \r (только в Windows). Распознать управляющую конструкцию в тексте проще всего по символу \. 
                                                                                       print("- Did Joffrey agree?\n- He did. He also said \"I love using \\n\".")
                                                                                       print('- Did Joffrey agree?\n- He did. He also said "I love using \\n".')
Конкатенация — операция соединения двух строк:                                         print("King's " + ' Landing'):
                                                                                       print("Winter " + 'came' + " for " + 'the ' + "House" + ' of ' + "Frey.")
Кодировка — набор символов, закодированных с помощью чисел для представления текста в электронном виде:
                                                                                       print(chr(126))
                                                                                       print(chr(94))
                                                                                       print(chr(37))

Хороший стиль программирования:
Всегда отбивайте арифметические операторы пробелами от самих чисел (операндов):        print(81 / 9)
Оформление арифметической операции:                                                    print(6 - -81) или для понятности (6 - (-81))
                                                                                       print(((8 / 2) + 5) - (-3 / 2))
Стандарты оформления кода:                                                             https://www.python.org/dev/peps/pep-0008/
Линетр (помощник проверки кода на соблюдения стандартов по оформлению):                https://flake8.pycqa.org/en/latest/
Список всех правл хорошего кода:                                                       https://lintlyci.github.io/Flake8Rules/

Дополнительная информация:
Арифметическая операция — сложение, вычитание, умножение и деление.
Оператор — специальный символ, создающий операцию. Например, + создает операцию сложения.
Операнд — объект, который участвует в операции. 3 * 6: здесь 3 и 6 — операнды.
Унарная операция — операция с одним операндом. Например, -3 — унарная операция для получения числа, противоположного числу три.
Бинарная операция — операция с двумя операндами. Например, 3 + 9. И тернарная соответственно.
Коммутативность — свойство операции, когда изменения порядка операндов не влияет на результат. Например, сложение — коммутативная операция: от перемены мест слагаемых сумма не 
меняется.
Конкатенация — операция соединения двух строк. Например, print("King's " + ' Landing')
